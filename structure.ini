# This is the configuration file for Pruvaro proof system.
# It follows the INI format, which is divided in sections
# and fields.
# 
# Sections are defined by their headers, which are enclosed
# in square brackets, like [STRUCTURAL SETTINGS] or
# [COMMANDS]. Inside each one of the sections, there are
# fields. Fields have their specific names, like rootLocation
# and compilationCommand, and are separated from their
# values using an = (equal sign) or : (colon). Quotes ARE
# NOT required (and will be read as actual quotes, which is
# usually not the desired behaviour) around strings.
#
# Lines starting with # (hash) or ; (semicolon) are considered
# comments, and thus are ignored by the parser.
#
# Some fields are obligatory, while some are optional. For
# each one of the fields, there is a comment preceding it
# and explaining if it is obligatory or not.
#
# All the section headers must be present in the file so that
# it is correctly compiled.
#
# This file must be called structure.ini, and must be placed
# directly under the root of the proof system.


# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
# The GENERAL SETTINGS section contains the overall structure
# information, describing how the proof system is set up.
# It contains fields like the base name of all Discipline
# Directories, the paths (all relative to the root of the
# proof system) that must be excluded from recursion process
# (the hidden paths), and more.
[GENERAL SETTINGS]

# OBLIGATORY FIELD
# This field is a comma-separated ("comma" is this character: ,)
# list of the base names of all Discipline Directories. Trailing
# whitespace after the comma should not matter.
#
# All Discipline Directories must correspond to actual
# directories, whose base names must be the ones listed in
# the field below.
disciplineDirectories = Mathematics, Physics

# OBLIGATORY FIELD
# This field is a comma-separated ("comma" is this character: ,)
# list of the paths of all directories which should not be
# considered part of the proof system, and thus are not looked
# into when recursing and looking for proof files.
#
# Keep in mind that all of those paths are taken RELATIVE TO THE
# ROOT OF THE PROOF SYSTEM. Moreover, be mindful of the path
# separator you use if this file is meant to describe a proof
# system that will be shared across different platforms. For
# this reason, in the Pruvaro system, we only describe hidden
# directories directly under the root of the proof system.
hiddenPaths = Templates

# OBLIGATORY FIELD
# This field is a comma-separated ("comma" is this charecter: ,)
# list of the base names for directories which should not be
# recursed into when looking for proof files. These apply
# everywhere within the Proof System.
# 
# These hidden directories can be used to store things which
# are not directly related to the Proof System, but may help
# it, such as textual explanations, or scraps/old versions
# from proofs.
hiddenBaseNames = Scraps

# OBLIGATORY FIELD
# The base name of all project files.
# 
# Project files are the files, housed directly inside each
# Discipline Directory, which contain the paths of all the proof
# files that other proof files in the same Discipline Directory
# have access to.
# 
# For example, ideally, if all the proof files have been
# correctly added, the "Physics" Discipline Directory's project
# file will contain a list of all the files inside the "Physics"
# Discipline Directory itself (descending directly or
# indirectly), but also from all the files in the "Mathematics"
# Discipline Directory (descending directly or indirectly),
# since the "Physics" Discipline Directory has dependency
# permission on the "Mathematics" Discipline Directory.
# 
# It is this declaration of the files which will allow,
# later, the building of the correct Makefiles, allowing for
# the dependencies to be built correctly.
# 
# Changing this field will require updating the Makefiles
# as well.
projectFileName = _CoqProject

# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
# Here we list the sections that describe the Discipline
# Directory-specific configuration for each one of the
# Discipline Directories listed in the disciplineDirectories
# field of the GENERAL SETTINGS.
#
# The sections should be named "DISCIPLINE DIRECTORY: BaseName"
# where BaseName is the list entry name in the
# disciplineDirectories configuration field.
#
# There MUST be a section for each one of the Discipline
# Directories listed, otherwise, the program will fail to
# read this file and will not be able to proceed.
#
# A Discipline Directory section has only one field, the
# accessibleDiscDirs field. This field is OBLIGATORY, and is
# a comma-separated ("comma" is this character: ,) list of the
# Discipline Directories that directory has dependency access
# on, EXCLUDING itself, since self-dependency is implicit.
#
# For example, the Physics Discipline Directory is allowed to
# depend on the Mathematics Discipline Directory (and, implicitly,
# on itself). So, its section would read:
# 
# [DISCIPLINE DIRECTORY: Physics]
# accessibleDiscDirs = Mathematics
# 
# Notice how the list does not mention "Physics".
#
# For a Discipline Directory with no dependency access permissions
# (other than, obviously, itself), you can leave the space
# after the equal sign empty (trailing spaces should not matter).
# For example, the Mathematics Discipline Directory only depends
# on itself, so its section reads:
# 
# [DISCIPLINE DIRECTORY: Mathematics]
# accessibleDiscDirs = 
#
# Notice again that the list does not mention "Mathematics".
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

# Mathematics Discipline Directory.
[DISCIPLINE DIRECTORY: Mathematics]
accessibleDiscDirs = 

# Physics Discipline Directory.
[DISCIPLINE DIRECTORY: Physics]
accessibleDiscDirs = Mathematics
